# JMH version: 1.36
# VM version: JDK 11.0.7, Java HotSpot(TM) 64-Bit Server VM, 11.0.7+8-LTS
# VM invoker: D:\Program Files\Java\jdk-11.0.7\bin\java.exe
# VM options: -javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2023.2\lib\idea_rt.jar=57712:D:\Program Files\JetBrains\IntelliJ IDEA 2023.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.allst.jmh.example.JmhExample01.arrayListAdd

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.050 us/op
# Warmup Iteration   2: 0.032 us/op
# Warmup Iteration   3: 0.032 us/op
# Warmup Iteration   4: 0.030 us/op
# Warmup Iteration   5: 0.031 us/op
# Warmup Iteration   6: 0.034 us/op
# Warmup Iteration   7: 0.037 us/op
# Warmup Iteration   8: 0.046 us/op
# Warmup Iteration   9: 0.044 us/op
# Warmup Iteration  10: 0.032 us/op
Iteration   1: 0.033 us/op
Iteration   2: 0.034 us/op
Iteration   3: 0.039 us/op
Iteration   4: 0.036 us/op
Iteration   5: 0.035 us/op
Iteration   6: 0.030 us/op
Iteration   7: 0.037 us/op
Iteration   8: 0.036 us/op
Iteration   9: 0.036 us/op
Iteration  10: 0.036 us/op


Result "com.allst.jmh.example.JmhExample01.arrayListAdd":
  0.035 ±(99.9%) 0.004 us/op [Average]
  (min, avg, max) = (0.030, 0.035, 0.039), stdev = 0.002
  CI (99.9%): [0.031, 0.039] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 11.0.7, Java HotSpot(TM) 64-Bit Server VM, 11.0.7+8-LTS
# VM invoker: D:\Program Files\Java\jdk-11.0.7\bin\java.exe
# VM options: -javaagent:D:\Program Files\JetBrains\IntelliJ IDEA 2023.2\lib\idea_rt.jar=57712:D:\Program Files\JetBrains\IntelliJ IDEA 2023.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.allst.jmh.example.JmhExample01.linkedListAdd

# Run progress: 50.00% complete, ETA 00:03:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.128 us/op
# Warmup Iteration   2: 0.130 us/op
# Warmup Iteration   3: 0.157 us/op
# Warmup Iteration   4: 0.140 us/op
# Warmup Iteration   5: 0.138 us/op
# Warmup Iteration   6: 0.158 us/op
# Warmup Iteration   7: 0.136 us/op
# Warmup Iteration   8: 0.135 us/op
# Warmup Iteration   9: 0.177 us/op
# Warmup Iteration  10: 0.132 us/op
Iteration   1: 0.160 us/op
Iteration   2: 0.216 us/op
Iteration   3: 0.137 us/op
Iteration   4: 0.245 us/op
Iteration   5: 0.135 us/op
Iteration   6: 0.254 us/op
Iteration   7: 0.128 us/op
Iteration   8: 0.238 us/op
Iteration   9: 0.122 us/op
Iteration  10: 0.232 us/op


Result "com.allst.jmh.example.JmhExample01.linkedListAdd":
  0.187 ±(99.9%) 0.083 us/op [Average]
  (min, avg, max) = (0.122, 0.187, 0.254), stdev = 0.055
  CI (99.9%): [0.104, 0.270] (assumes normal distribution)


# Run complete. Total time: 00:07:10

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                   Mode  Cnt  Score   Error  Units
JmhExample01.arrayListAdd   avgt   10  0.035 ± 0.004  us/op
JmhExample01.linkedListAdd  avgt   10  0.187 ± 0.083  us/op
